@using Microsoft.AspNet.Identity
@using Project.ViewModels.Story

@model StoryVM

@{ 
    var myModalEdit = "myModal" + Model.Id;
    var myModalDelete = "myModalDelete" + Model.Id;
}

<div class="card" style="margin-top:15px;">
    <ul class="list-group list-group-flush">
        <li class="list-group-item" style="background-color:teal;color:white;">
            <span class="pull-right badge badge-primary">@Model.GetTypeString()</span>
            <h2>@Model.Title</h2>
            <hr />
            @using (Html.BeginForm("AddStoryLike", "UserProfile", new { username = User.Identity.GetUserName(), storyId = Model.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "like-forms", role = "form" })) {
                @Html.AntiForgeryToken()
                <p>
                    <b>@Model.Content</b> <br /> <small>
                        by @Model.UserName
                        on @Model.Date - @Model.Likes.Count()

                        @if (Model.DidCurrentUserLiked) {
                            <i class="fa fa-heart" style="color:red;" aria-hidden="true"></i>
                        } else if (Model.CanCurrentUserLike) {
                            <i class="fa fa-heart-o" onclick="$('#like-@Model.Id').click();" style="color:red; cursor:pointer;" aria-hidden="true"></i>
                            <button type="submit" id="like-@Model.Id" style="display:none;"></button>
                        } else {
                            <i class="fa fa-heart" style="color:gray;" aria-hidden="true"></i>
                        }

                    </small>
                </p>
            }
            <div class="btn-group pull-right" role="group">
                @if (Model.UserId == User.Identity.GetUserId()) {
                    <a href="#" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#@myModalEdit">Edit</a>
                }
                @if (Model.UserId == User.Identity.GetUserId() || User.IsInRole("Admin")) {
                    <a href="#" class="btn btn-sm btn-danger" data-toggle="modal" data-target="#@myModalDelete">Delete</a>
                }
            </div>
        </li>
    </ul>
    <div class="modal fade" id="@myModalEdit" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("EditStory", "UserProfile", new { storyId = Model.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "editstory-form", role = "form" })) {
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Edit Story </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-10">
                                @Html.Label("Type")
                                @{
                                    List<SelectListItem> type = new List<SelectListItem>();

                                    type.Insert(0, (new SelectListItem { Text = "Regular", Value = "1" }));
                                    type.Insert(1, (new SelectListItem { Text = "AskingAdvice", Value = "2" }));
                                }
                                @Html.DropDownList("Type", type.Select(l => new SelectListItem { Selected = (l.Text == Model.Type.ToString()), Text = l.Text, Value = l.Value }), null, new { @class = "form-control required" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-10">
                                @Html.Label("Title")
                                @Html.TextBox("Title", Model.Title, htmlAttributes: new { @class = "form-control required" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-10">
                                @Html.Label("Content")
                                @Html.TextArea("Content", Model.Content, htmlAttributes: new { @class = "form-control required" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary"> Edit</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="@myModalDelete" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("DeleteStory", "UserProfile", new { storyId = Model.Id }, FormMethod.Post, new { @class = "form-horizontal", id = "deletestory-form", role = "form" })) {
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Delete Story </h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @Html.Label("Are you sure you want to delete this story?")
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal"> No </button>
                        <button type="submit" class="btn btn-primary"> Yes </button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model.Comments.Count() == 0) {
            <h5>There are no Comments yet</h5>
        }
        @foreach (var com in Model.Comments) {
            <div class="comments col-md-12" id="comments">
                <!-- comment -->
                <div class="comment mb-2 row">
                    <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                        <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                    </div>
                    <div class="comment-content col-md-11 col-sm-10">
                        <h6 class="small comment-meta"><a href="@Url.Action("Index", "UserProfile", new { username = com.UserName })">@com.UserName</a> @com.Date</h6>
                        <div class="comment-body">
                            <p>
                                @com.Text
                                <br>
                                <a href="#" onclick="javascript:$('#com-@com.Id').show();$(this).hide();" class="text-right small"><i class="ion-reply"></i> Reply</a>
                                <div id="com-@com.Id" style="display:none;">
                                    @using (Html.BeginForm("AddCommentReply", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" })) {
                                        @Html.AntiForgeryToken()

                                        @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Reply" })
                                        @Html.Hidden("ParentCommentId", com.Id)
                                        <button type="submit" href="" class="float-right btn btn-sm btn-link"><i class="fa fa-plus" aria-hidden="true"></i> Add reply</button>
                                    }
                                </div>
                            </p>
                        </div>
                    </div>
                    @foreach (var subcom in com.Comments) {
                        <!-- reply is indented -->
                        <div class="comment-reply col-md-11 offset-md-1 col-sm-10 offset-sm-2">
                            <div class="row">
                                <div class="comment-avatar col-md-1 col-sm-2 text-center pr-1">
                                    <a href=""><img class="mx-auto rounded-circle img-fluid" src="https://www.titanmachinery.ro/files/persons/img_default.gif" alt="avatar"></a>
                                </div>
                                <div class="comment-content col-md-11 col-sm-10 col-12">
                                    <h6 class="small comment-meta"><a href="@Url.Action("Index", "UserProfile", new { username = subcom.UserName })">@subcom.UserName</a> @subcom.Date</h6>
                                    <div class="comment-body">
                                        <p>
                                            @subcom.Text
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /reply is indented -->
                    }
                </div>
                <!-- /comment -->

            </div>
        }
        <div class="row pt-2">
            <div class="col-12">
                @using (Html.BeginForm("AddStoryComment", "UserProfile", new { }, FormMethod.Post, new { @class = "form-horizontal", id = "comment-form", role = "form" })) {
                    @Html.AntiForgeryToken()

                    @Html.TextArea("Text", new { @class = "form-control form-control-sm", placeholder = "Add Comment" })
                    @Html.Hidden("ParentStoryId", Model.Id)
                    <br />
                    <button type="submit" href="" class="float-right btn btn-sm btn-primary"><i class="fa fa-plus" aria-hidden="true"></i> Add Comment</button>
                }

            </div>
        </div>
    </div>
</div>